// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package service

import (
	"context"
	"hotgo/internal/model/input/sysin"

	"github.com/gogf/gf/v2/net/ghttp"
)

type ICommonUpload interface {
	UploadImage(ctx context.Context, file *ghttp.UploadFile) (result *sysin.AttachmentListModel, err error)
	UploadLocal(ctx context.Context, file *ghttp.UploadFile, meta *sysin.UploadFileMeta) (result *sysin.AttachmentListModel, err error)
	LastUrl(ctx context.Context, fullPath, drive string) string
}

var localCommonUpload ICommonUpload

func CommonUpload() ICommonUpload {
	if localCommonUpload == nil {
		panic("implement not found for interface ICommonUpload, forgot register?")
	}
	return localCommonUpload
}

func RegisterCommonUpload(i ICommonUpload) {
	localCommonUpload = i
}
