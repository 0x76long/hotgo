// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package service

import (
	"context"
	"hotgo/internal/library/queue"
	"hotgo/internal/model/entity"
	"hotgo/internal/model/input/sysin"
)

type ISysLog interface {
	Export(ctx context.Context, in sysin.LogListInp) (err error)
	RealWrite(ctx context.Context, commonLog entity.SysLog) error
	AutoLog(ctx context.Context) (err error)
	QueueJob(ctx context.Context, mqMsg queue.MqMsg) (err error)
	AnalysisLog(ctx context.Context) entity.SysLog
	View(ctx context.Context, in sysin.LogViewInp) (res *sysin.LogViewModel, err error)
	Delete(ctx context.Context, in sysin.LogDeleteInp) error
	List(ctx context.Context, in sysin.LogListInp) (list []*sysin.LogListModel, totalCount int, err error)
}

var localSysLog ISysLog

func SysLog() ISysLog {
	if localSysLog == nil {
		panic("implement not found for interface ISysLog, forgot register?")
	}
	return localSysLog
}

func RegisterSysLog(i ISysLog) {
	localSysLog = i
}
