// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package service

import (
	"context"
	"hotgo/internal/model/entity"
	"hotgo/internal/model/input/sysin"
)

type ISysAttachment interface {
	Delete(ctx context.Context, in sysin.AttachmentDeleteInp) error
	Edit(ctx context.Context, in sysin.AttachmentEditInp) (err error)
	Status(ctx context.Context, in sysin.AttachmentStatusInp) (err error)
	MaxSort(ctx context.Context, in sysin.AttachmentMaxSortInp) (*sysin.AttachmentMaxSortModel, error)
	View(ctx context.Context, in sysin.AttachmentViewInp) (res *sysin.AttachmentViewModel, err error)
	List(ctx context.Context, in sysin.AttachmentListInp) (list []*sysin.AttachmentListModel, totalCount int, err error)
	Add(ctx context.Context, meta *sysin.UploadFileMeta, fullPath, drive string) (data *entity.SysAttachment, err error)
}

var localSysAttachment ISysAttachment

func SysAttachment() ISysAttachment {
	if localSysAttachment == nil {
		panic("implement not found for interface ISysAttachment, forgot register?")
	}
	return localSysAttachment
}

func RegisterSysAttachment(i ISysAttachment) {
	localSysAttachment = i
}
