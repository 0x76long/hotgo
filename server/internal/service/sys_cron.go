// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package service

import (
	"context"
	"hotgo/internal/model/input/sysin"
)

type ISysCron interface {
	StartCron(ctx context.Context)
	Delete(ctx context.Context, in sysin.CronDeleteInp) error
	Edit(ctx context.Context, in sysin.CronEditInp) (err error)
	Status(ctx context.Context, in sysin.CronStatusInp) (err error)
	MaxSort(ctx context.Context, in sysin.CronMaxSortInp) (*sysin.CronMaxSortModel, error)
	View(ctx context.Context, in sysin.CronViewInp) (res *sysin.CronViewModel, err error)
	List(ctx context.Context, in sysin.CronListInp) (list []*sysin.CronListModel, totalCount int, err error)
}

var localSysCron ISysCron

func SysCron() ISysCron {
	if localSysCron == nil {
		panic("implement not found for interface ISysCron, forgot register?")
	}
	return localSysCron
}

func RegisterSysCron(i ISysCron) {
	localSysCron = i
}
